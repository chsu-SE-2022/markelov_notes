<?xml version="1.0" encoding="utf-8"?>
<Window x:Class="TaskManager.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:models="clr-namespace:TaskManager.Models"
        xmlns:behaviors="clr-namespace:TaskManager.Behaviors"
        xmlns:converters="clr-namespace:TaskManager.Converters"
        xmlns:local="clr-namespace:TaskManager.Views"
        Title="Канбан доска" Height="800" Width="1200"
        prism:ViewModelLocator.AutoWireViewModel="True">
    <Window.Resources>
        <converters:GreaterThanConverter x:Key="GreaterThanConverter"/>
        <!-- Цвета колонок -->
        <SolidColorBrush x:Key="BacklogColumnBrush" Color="#3498db"/>
        <SolidColorBrush x:Key="BacklogHeaderBrush" Color="#2980b9"/>
        <SolidColorBrush x:Key="RequestColumnBrush" Color="#16a085"/>
        <SolidColorBrush x:Key="RequestHeaderBrush" Color="#147a6c"/>
        <SolidColorBrush x:Key="SelectedColumnBrush" Color="#9b59b6"/>
        <SolidColorBrush x:Key="SelectedHeaderBrush" Color="#8e44ad"/>
        <SolidColorBrush x:Key="InProgressColumnBrush" Color="#e67e22"/>
        <SolidColorBrush x:Key="InProgressHeaderBrush" Color="#d35400"/>
        <SolidColorBrush x:Key="CompletedColumnBrush" Color="#2ecc71"/>
        <SolidColorBrush x:Key="CompletedHeaderBrush" Color="#1e8449"/>
        <SolidColorBrush x:Key="DeleteButtonBrush" Color="#ff4444"/>
        <SolidColorBrush x:Key="HoverBackgroundBrush" Color="#F8F8F8"/>

        <Style x:Key="TaskBorderStyle" TargetType="Border">
            <Setter Property="Background" Value="White"/>
            <Setter Property="CornerRadius" Value="5"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Padding" Value="5"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}, Path=IsMouseOver}" Value="True">
                    <Setter Property="Background" Value="#F8F8F8"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="EditButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="70"/>
            <Setter Property="Margin" Value="0,0,5,0"/>
            <Setter Property="Height" Value="25"/>
        </Style>

        <Style x:Key="DeleteButtonStyle" TargetType="Button" BasedOn="{StaticResource EditButtonStyle}">
            <Setter Property="Background" Value="#ff4444"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <DataTemplate x:Key="TaskTemplate">
            <Border x:Name="TaskBorder" Background="White" CornerRadius="5" Margin="2" Padding="5">
                <Grid>
                    <Grid x:Name="ViewMode">
                        <StackPanel>
                            <TextBlock Text="{Binding Title}" 
                                     TextWrapping="Wrap" 
                                     FontWeight="SemiBold"/>
                            <TextBlock Text="{Binding Description}" 
                                     TextWrapping="Wrap" 
                                     Margin="0,5,0,5" 
                                     Opacity="0.7"/>
                        </StackPanel>
                    </Grid>
                    <Grid x:Name="EditMode" Visibility="Collapsed">
                        <StackPanel>
                            <TextBox Text="{Binding Title, UpdateSourceTrigger=PropertyChanged}"
                                    Margin="0,0,0,5"/>
                            <TextBox Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}"
                                    TextWrapping="Wrap"
                                    AcceptsReturn="True"
                                    MinHeight="60"
                                    Margin="0,0,0,5"/>
                            <StackPanel Orientation="Horizontal" 
                                      HorizontalAlignment="Right"
                                      Margin="0,0,0,5">
                                <Button x:Name="DeleteButton"
                                        Content="Удалить"
                                        Command="{Binding DataContext.DeleteTaskCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}"
                                        Style="{StaticResource DeleteButtonStyle}"/>
                                <Button Content="Отмена"
                                        Command="{Binding DataContext.CancelEditCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}"
                                        Style="{StaticResource EditButtonStyle}"/>
                                <Button Content="Сохранить"
                                        Command="{Binding DataContext.SaveTaskCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}"
                                        Style="{StaticResource EditButtonStyle}"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsEditing}" Value="True">
                    <Setter TargetName="ViewMode" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="EditMode" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="TaskBorder" Property="Background" Value="#F8F8F8"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsEditing}" Value="True"/>
                        <Condition Binding="{Binding Id}" Value="0"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="DeleteButton" Property="Visibility" Value="Collapsed"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsEditing}" Value="True"/>
                        <Condition Binding="{Binding Id, ConverterParameter=0, Converter={StaticResource GreaterThanConverter}}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="DeleteButton" Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}, Path=IsMouseOver}" Value="True">
                    <Setter TargetName="TaskBorder" Property="Background" Value="#F8F8F8"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <Style TargetType="ListView">
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <Style TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="0,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border x:Name="Border"
                                Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Border"
                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                           To="1.02" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="Border"
                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                           To="1.02" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect BlurRadius="10" ShadowDepth="2" Opacity="0.3"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AddButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="0,0,5,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse Fill="White" Opacity="0.2"/>
                            <Path Fill="White" 
                                  Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z"
                                  Width="16"
                                  Height="16"
                                  Stretch="Uniform"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ColumnHeaderStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="ColumnIconStyle" TargetType="Path">
            <Setter Property="Fill" Value="White"/>
            <Setter Property="Width" Value="27"/>
            <Setter Property="Height" Value="27"/>
            <Setter Property="Margin" Value="0,0,5,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="KanbanColumnStyle" TargetType="Border">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="CornerRadius" Value="5"/>
        </Style>

        <Style x:Key="KanbanColumnHeaderStyle" TargetType="Border">
            <Setter Property="DockPanel.Dock" Value="Top"/>
            <Setter Property="CornerRadius" Value="5,5,0,0"/>
            <Setter Property="Padding" Value="10,5"/>
        </Style>

        <Style x:Key="KanbanListViewStyle" TargetType="ListView" BasedOn="{StaticResource {x:Type ListView}}">
            <Setter Property="AllowDrop" Value="True"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="ItemTemplate" Value="{StaticResource TaskTemplate}"/>
            <Setter Property="behaviors:DragDropBehavior.IsEnabled" Value="True"/>
        </Style>

        <!-- Данные иконок для заголовков колонок (Material Design Icons) -->
        <Geometry x:Key="BacklogIconData">M13,14H11V10H13V14M13,18H11V16H13V18M19,3H5C3.89,3 3,3.89 3,5V19C3,20.11 3.89,21 5,21H19C20.11,21 21,20.11 21,19V5C21,3.89 20.11,3 19,3M19,19H5V5H19V19Z</Geometry>
        <Geometry x:Key="RequestIconData">M17,10H14V8H17V10M17,14H14V12H17V14M17,18H14V16H17V18M19,3H5C3.89,3 3,3.89 3,5V19C3,20.11 3.89,21 5,21H19C20.11,21 21,20.11 21,19V5C21,3.89 20.11,3 19,3M19,19H5V5H19V19M11,7H7V11H11V7M11,11.5H7V15.5H11V11.5M11,16H7V20H11V16Z</Geometry>
        <Geometry x:Key="SelectedIconData">M12,15.39L16.24,18.55L14.71,13.4L18.81,10.23L13.66,10.1L12,5.12L10.34,10.1L5.19,10.23L9.29,13.4L7.76,18.55L12,15.39M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z</Geometry>
        <Geometry x:Key="InProgressIconData">M12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,7V13L17.4,16.2L16.6,17.6L10.4,14V7H12Z</Geometry>
        <Geometry x:Key="CompletedIconData">M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4M10,17L5,12L6.41,10.59L10,14.17L17.59,6.58L19,8L10,17Z</Geometry>
    </Window.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Бэклог -->
        <Border Grid.Column="0" Background="#3498db" Margin="5">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <!-- Заголовок колонки Бэклог -->
                <Border Grid.Row="0" Background="{StaticResource BacklogHeaderBrush}" Style="{StaticResource KanbanColumnHeaderStyle}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Path Grid.Column="0" Style="{StaticResource ColumnIconStyle}" Data="{StaticResource BacklogIconData}"/>
                        <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBlock Text="Бэклог" Style="{StaticResource ColumnHeaderStyle}"/>
                            <TextBlock Text="{Binding BacklogTaskCount}" Style="{StaticResource ColumnHeaderStyle}" Margin="5,0,0,0"/>
                        </StackPanel>
                        <Button Grid.Column="2" Style="{StaticResource AddButtonStyle}" Command="{Binding AddBacklogTaskCommand}"/>
                    </Grid>
                </Border>

                <ListView Grid.Row="1" 
                          ItemsSource="{Binding BacklogTasks}"
                          Tag="{x:Static models:KanbanTaskStatus.Backlog}"
                          Style="{StaticResource KanbanListViewStyle}"/>
            </Grid>
        </Border>

        <!-- Запросы -->
        <Border Grid.Column="1" Background="#16a085" Margin="5">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <!-- Заголовок колонки Запросы -->
                <Border Grid.Row="0" Background="{StaticResource RequestHeaderBrush}" Style="{StaticResource KanbanColumnHeaderStyle}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Path Grid.Column="0" Style="{StaticResource ColumnIconStyle}" Data="{StaticResource RequestIconData}"/>
                        <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBlock Text="Запросы" Style="{StaticResource ColumnHeaderStyle}"/>
                            <TextBlock Text="{Binding RequestTaskCount}" Style="{StaticResource ColumnHeaderStyle}" Margin="5,0,0,0"/>
                        </StackPanel>
                        <Button Grid.Column="2" Style="{StaticResource AddButtonStyle}" Command="{Binding AddRequestTaskCommand}"/>
                    </Grid>
                </Border>

                <ListView Grid.Row="1" 
                          ItemsSource="{Binding RequestTasks}"
                          Tag="{x:Static models:KanbanTaskStatus.Request}"
                          Style="{StaticResource KanbanListViewStyle}"/>
            </Grid>
        </Border>

        <!-- Выбрано -->
        <Border Grid.Column="2" Background="#9b59b6" Margin="5">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <!-- Заголовок колонки Выбрано -->
                <Border Grid.Row="0" Background="{StaticResource SelectedHeaderBrush}" Style="{StaticResource KanbanColumnHeaderStyle}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Path Grid.Column="0" Style="{StaticResource ColumnIconStyle}" Data="{StaticResource SelectedIconData}"/>
                        <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBlock Text="Выбрано" Style="{StaticResource ColumnHeaderStyle}"/>
                            <TextBlock Text="{Binding SelectedTaskCount}" Style="{StaticResource ColumnHeaderStyle}" Margin="5,0,0,0"/>
                        </StackPanel>
                        <Button Grid.Column="2" Style="{StaticResource AddButtonStyle}" Command="{Binding AddSelectedTaskCommand}"/>
                    </Grid>
                </Border>

                <ListView Grid.Row="1" 
                          ItemsSource="{Binding SelectedTasks}"
                          Tag="{x:Static models:KanbanTaskStatus.Selected}"
                          Style="{StaticResource KanbanListViewStyle}"/>
            </Grid>
        </Border>

        <!-- В работе -->
        <Border Grid.Column="3" Background="#e67e22" Margin="5">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <!-- Заголовок колонки В работе -->
                <Border Grid.Row="0" Background="{StaticResource InProgressHeaderBrush}" Style="{StaticResource KanbanColumnHeaderStyle}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Path Grid.Column="0" Style="{StaticResource ColumnIconStyle}" Data="{StaticResource InProgressIconData}"/>
                        <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBlock Text="В работе" Style="{StaticResource ColumnHeaderStyle}"/>
                            <TextBlock Text="{Binding InProgressTaskCount}" Style="{StaticResource ColumnHeaderStyle}" Margin="5,0,0,0"/>
                        </StackPanel>
                        <Button Grid.Column="2" Style="{StaticResource AddButtonStyle}" Command="{Binding AddInProgressTaskCommand}"/>
                    </Grid>
                </Border>

                <ListView Grid.Row="1" 
                          ItemsSource="{Binding InProgressTasks}"
                          Tag="{x:Static models:KanbanTaskStatus.InProgress}"
                          Style="{StaticResource KanbanListViewStyle}"/>
            </Grid>
        </Border>

        <!-- Готово -->
        <Border Grid.Column="4" Background="#27ae60" Margin="5">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <!-- Заголовок колонки Готово -->
                <Border Grid.Row="0" Background="{StaticResource CompletedHeaderBrush}" Style="{StaticResource KanbanColumnHeaderStyle}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Path Grid.Column="0" Style="{StaticResource ColumnIconStyle}" Data="{StaticResource CompletedIconData}"/>
                        <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBlock Text="Готово" Style="{StaticResource ColumnHeaderStyle}"/>
                            <TextBlock Text="{Binding CompletedTaskCount}" Style="{StaticResource ColumnHeaderStyle}" Margin="5,0,0,0"/>
                        </StackPanel>
                        <Button Grid.Column="2" Style="{StaticResource AddButtonStyle}" Command="{Binding AddCompletedTaskCommand}"/>
                    </Grid>
                </Border>

                <ListView Grid.Row="1" 
                          ItemsSource="{Binding CompletedTasks}"
                          Tag="{x:Static models:KanbanTaskStatus.Completed}"
                          Style="{StaticResource KanbanListViewStyle}"/>
            </Grid>
        </Border>

        <!-- Контейнер для уведомлений в нижнем правом углу -->
        <ItemsControl ItemsSource="{Binding Notifications}" Grid.ColumnSpan="5" IsHitTestVisible="False" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="10">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <local:NotificationView Margin="0,5,0,0"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</Window> 