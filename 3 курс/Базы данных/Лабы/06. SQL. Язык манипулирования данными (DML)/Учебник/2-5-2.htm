<html>
<head>
   <title>Функции без использования фразы GROUP BY</title>

</head>

<body background="fon.jpg">
<div align="center"><b><font>2.5.2. Функции без использования фразы GROUP BY</font></b></div><font size = "-1">


<p align=justify>Если не используется фраза GROUP BY, то в перечень элементов_SELECT можно включать лишь SQL-функции или выражения, содержащие такие функции. Другими словами, нельзя иметь в списке столбцы, не являющихся аргументами SQL-функций.</P>
<p align=justify>Например, выдать данные о массе лука (ПР=10), проданного поставщиками, и указать количество этих поставщиков:</P>
<CENTER><TABLE BORDER=0 width=100%>
<TR><TH align=left></TH><TH colspan=2>Результат:</TH>
<TR valign=top><TD rowspan=3>
<PRE>
SELECT	SUM(К_во),COUNT(К_во)	
FROM	Поставки	
WHERE	ПР = 10;	</PRE></td>

<TR><TH>SUM(К_во) </th><th> COUNT(К_во)</TH></TR>
<TR><TD align=center>	220</TD><td align=center>2</TD></TR>
</table></CENTER>

<p align=justify>Если бы для вывода в результат еще и номера продукта был сформирован запрос</P>

<PRE>
SELECT	ПР,SUM(К_во),COUNT(К_во)
FROM	Поставки
WHERE	ПР = 10;</PRE>

<p align=justify>то было бы получено сообщение об ошибке. Это связано с тем, что SQL-функция создает единственное значение из множества значений столбца-аргумента, а для "свободного" столбца должно быть выдано все множество его значений. Без специального указания (оно задается фразой GROUP BY) SQL не будет выяснять, одинаковы значения этого множества (как в данном примере, где ПР=10) или различны (как было бы при отсутствии WHERE фразы). Поэтому подобный запрос отвергается системой.</P>
<p align=justify>Правда, никто не запрещает дать запрос</P>

<PRE>
SELECT	'Кол-во лука =',SUM(К_во),COUNT(К_во)
FROM	Поставки
WHERE	ПР = 10;
</PRE>

<TABLE BORDER=0>
<TR><TH colspan=3 align=left>Результат:</TH>
<TR><TH align=left>'Кол-во лука ='</th><TH align=left>SUM(К_во)</th><TH align=left>COUNT(К_во)</TH></TR>
<TR><TD>Кол-во лука =</td><TD>220</td><TD>2</TD></TR>
</table>

<p align=justify>Отметим также, что в столбце-аргументе перед применением любой функции, кроме COUNT(*), исключаются все неопределенные значения. Если оказывается, что аргумент - пустое множество, функция COUNT принимает значение 0, а остальные - NULL.</P>
<p align=justify>Например, для получения суммы цен, средней цены, количества поставляемых продуктов и количества разных цен продуктов, проданных коопторгом УРОЖАЙ (ПС=5), а также для получения количества продуктов, которые могут поставляться этим коопторгом, можно дать запрос</P>

<PRE>
SELECT	SUM(Цена),AVG(Цена),COUNT(Цена),
	COUNT(DISTINCT  Цена),COUNT(*) 
FROM	Поставки
WHERE	ПС = 5;</PRE>

<P>и получить</P>
<font size="-1"><TABLE>
<TR><th>SUM(Цена)</th><th>AVG(Цена)</th><th>COUNT(Цена)</th><th>COUNT(DISTINCT Цена)</th><th>COUNT </TH></TR>(*)
<TR><TD align=center>	6.2</TD><td align=center>1.24</td><td align=center>	5</td><td align=center>	4</td><td align=center>	7</TD></TR>
</TABLE></font>

<p align=justify>В другом примере, где надо узнать "Сколько поставлено моркови и сколько поставщиков ее поставляют?":</P>

<PRE>
SELECT SUM(К_во),COUNT(К_во)
FROM	Поставки
WHER	ПР = 2;</PRE>

<P>будет получен ответ:</P>
<TABLE>
<TR><th>SUM(К_во)</th><th>COUNT (К_во)</TH></TR>
<TR><TD align=center>	-0-</TD><td align=center>0</TD></TR>
</TABLE>
<p align=justify>Наконец, попробуем получить сумму массы поставленного лука с его средней ценой ("Сапоги с яичницей"):</P>
<CENTER><TABLE BORDER=0 width=100%>
<TR><TH align=left></TH><TH>Результат:</TH>
<TR valign=top><TD rowspan=3>
<PRE>
SELECT	(SUM(К_во)	+AVG(Цена))	
FROM	Поставки
WHERE	ПР = 10;</PRE></td>

<TR><TH>SUM(К_во)+AVG(Цена)</TH></TR>
<TR><TD align=center>220.6</TD></TR>
</table></CENTER>

<p align="center">
<a href="2-5-1.htm">2.5.1</a> | <a href="index.htm">Содержание</a> | <a href="2-5-3.htm">2.5.3</a>
</p>

</body>
</html>
